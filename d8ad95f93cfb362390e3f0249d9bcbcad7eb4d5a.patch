From d8ad95f93cfb362390e3f0249d9bcbcad7eb4d5a Mon Sep 17 00:00:00 2001
From: Panu Matilainen <pmatilai@redhat.com>
Date: Fri, 10 May 2024 14:20:49 +0300
Subject: [PATCH] Add proper logic for debuginfo enablement

All these years, enabling debuginfo has required distros to hijack the
spec %install section with a macro like this:

    %install %{?_enable_debug_packages:%{?buildsubdir:%{debug_package}}}\
    %%install\
    %{nil}

This for a widely used, longtime upstream supported feature is just
gross, and also very non-obvious, feeble and whatnot. And totally
prevents the new append/prepend options from being used with %install.

Take advantage of several newish features to make this happen: we need
expressions to properly handle the numeric %_enable_debug_packages value
from a macro, and if enabled, output the debuginfo template as a dynamic
.specpart.

Enable debuginfo on Linux by default in the platform configuration.
Notably noarch should not have debuginfo so it's disabled in the
platform configuration - since 96467dce18f264b278e17ffe1859c88d9b5aa4b6
we can now actually rely on the platform configuration being valid,
so we can drop the "%ifnarch noarch" from the debug package check.
Further streamlining should be possible.

specstep.spec needs to be made noarch here, otherwise it'll now try
to produce debuginfo and fail.

Fixes: #2204
Fixes: #1878
---
 installplatform                |  6 ++++++
 macros.in                      |  2 --
 platform.in                    |  3 +++
 tests/data/SPECS/specstep.spec |  1 +
 tests/data/macros.debug        | 10 ----------
 5 files changed, 10 insertions(+), 12 deletions(-)

diff --git a/installplatform b/installplatform
index ac9b616435..2f204b3db2 100755
--- a/installplatform
+++ b/installplatform
@@ -28,6 +28,7 @@ for ARCH in noarch `grep ^arch_canon $RPMRC | cut -d: -f2` ${RPM_CUSTOM_ARCH:+cu
   ISABITS=
   CANONARCH=
   CANONCOLOR=
+  DEBUGINFO=0
   FILTER=cat
   case "${ARCH}" in
     custom)
@@ -207,6 +208,10 @@ for ARCH in noarch `grep ^arch_canon $RPMRC | cut -d: -f2` ${RPM_CUSTOM_ARCH:+cu
       LIB=${LIB}64
   fi
 
+  if [ "$OS" = "linux" ] && [ "$CANONARCH" != "noarch" ]; then
+      DEBUGINFO=1
+  fi
+
   PPD="${DESTDIR}/${platformdir}/${ARCH}-${OS}"
   [ -d $PPD ] || mkdir -p $PPD
 
@@ -215,6 +220,7 @@ for ARCH in noarch `grep ^arch_canon $RPMRC | cut -d: -f2` ${RPM_CUSTOM_ARCH:+cu
 	-e "s,=RPMCANONARCH=,$CANONARCH,g" \
 	-e "s,=RPMCANONCOLOR=,$CANONCOLOR," \
 	-e "s,=RPMRC_GNU=,$RPMRC_GNU," \
+	-e "s,=RPMDEBUGINFO=,$DEBUGINFO," \
 	-e "s,=LIB=,$LIB," \
 	-e "s,=ARCH_INSTALL_POST=,$ARCH_INSTALL_POST," \
 	-e '/\${\w*:-/!s,\${,%{_,' \
diff --git a/macros.in b/macros.in
index ba661d80a0..f439123809 100644
--- a/macros.in
+++ b/macros.in
@@ -195,11 +195,9 @@ package or when debugging this package.\
 %{nil}
 
 %debug_package \
-%ifnarch noarch\
 %global __debug_package 1\
 %_debuginfo_template\
 %{?_debugsource_packages:%_debugsource_template}\
-%endif\
 %{nil}
 
 %_langpack_template() \
diff --git a/platform.in b/platform.in
index 839aa12d4a..8332c3fe56 100644
--- a/platform.in
+++ b/platform.in
@@ -48,6 +48,8 @@
 
 %_defaultdocdir		%{_datadir}/doc
 
+%_enable_debug_packages =RPMDEBUGINFO=
+
 #==============================================================================
 # ---- Build policy macros.
 #
@@ -86,6 +88,7 @@
 %{nil}
 
 %__spec_install_post\
+    %[ 0%{?_enable_debug_packages} > 0 ? "%(echo "%{debug_package}" > %{specpartsdir}/rpm-debuginfo.specpart)" : "" ]\
     %{?__debug_package:%{__debug_install_post}}\
     %{__arch_install_post}\
     %{__os_install_post}\
diff --git a/tests/data/SPECS/specstep.spec b/tests/data/SPECS/specstep.spec
index 52afb0291d..129f4f9f88 100644
--- a/tests/data/SPECS/specstep.spec
+++ b/tests/data/SPECS/specstep.spec
@@ -3,6 +3,7 @@ Version: 1.0
 Release: 1
 Summary: Testing spec steps
 License: GPL
+BuildArch: noarch
 %{?preamble}
 
 %description
diff --git a/tests/data/macros.debug b/tests/data/macros.debug
index ee0cc9ebe7..a778fcd6bf 100644
--- a/tests/data/macros.debug
+++ b/tests/data/macros.debug
@@ -20,16 +20,6 @@
     %{_rpmconfigdir}/brp-strip-static-archive %{__strip} \
 %{nil}
 
-%__spec_install_post\
-    %{?__debug_package:%{__debug_install_post}}\
-    %{__arch_install_post}\
-    %{__os_install_post}\
-%{nil}
-
-%install %{?_enable_debug_packages:%{?buildsubdir:%{debug_package}}}\
-%%install\
-%{nil}
-
 # Should missing buildids terminate a build?
 %_missing_build_ids_terminate_build    1
 
