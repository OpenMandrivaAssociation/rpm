diff -up rpm-4.19.0/lib/rpmrc.c.16~ rpm-4.19.0/lib/rpmrc.c
--- rpm-4.19.0/lib/rpmrc.c.16~	2023-11-26 19:34:41.732242071 +0100
+++ rpm-4.19.0/lib/rpmrc.c	2023-11-26 19:34:41.796242681 +0100
@@ -1066,6 +1066,33 @@ static int is_geode(void)
 }
 #endif
 
+#if defined(__linux__) && (defined(__i386__) || defined(__x86_64__))
+static int is_ryzen() {
+    uint32_t eax, ebx, ecx, edx;
+    char vendor[13];
+    int family;
+    vendor[12]=0;
+#ifdef __i386__
+    cpuid(0, &eax, &ebx, &ecx, &edx);
+#else
+    cpuid(0, 0, &eax, &ebx, &ecx, &edx);
+#endif
+    memcpy(vendor, &ebx, sizeof(ebx));
+    memcpy(vendor+4, &edx, sizeof(edx));
+    memcpy(vendor+8, &ecx, sizeof(ecx));
+    if (!rstreqn(vendor, "AuthenticAMD", 12))
+        return 0;
+#ifdef __i386__
+    cpuid(1, &eax, &ebx, &ecx, &edx);
+#else
+    cpuid(1, 0, &eax, &ebx, &ecx, &edx);
+#endif
+    family = (eax>>8)&0xf;
+    if(family == 0xf)
+        family += (eax>>20)&0x7f;
+    return family >= 0x17;
+}
+#endif
 
 #if defined(__linux__)
 /**
@@ -1396,7 +1423,9 @@ static void defaultMachine(rpmrcCtx ctx,
 	{
 	    char mclass = (char) (RPMClass() | '0');
 
-	    if ((mclass == '6' && is_athlon()) || mclass == '7')
+	    if(is_ryzen())
+                strcpy(un.machine, "znver1_32");
+	    else if ((mclass == '6' && is_athlon()) || mclass == '7')
 	    	strcpy(un.machine, "athlon");
 	    else if (is_pentium4())
 		strcpy(un.machine, "pentium4");
@@ -1419,6 +1448,11 @@ static void defaultMachine(rpmrcCtx ctx,
 	}
 #endif
 
+#	if defined(__linux__) && defined(__x86_64__)
+        if (is_ryzen())
+             strcpy(un.machine, "znver1");
+#	endif
+
 	/* the uname() result goes through the arch_canon table */
 	canon = lookupInCanonTable(un.machine,
 			   ctx->tables[RPM_MACHTABLE_INSTARCH].canons,
diff -up rpm-4.19.0/macros.in.16~ rpm-4.19.0/macros.in
--- rpm-4.19.0/macros.in.16~	2023-11-26 19:34:41.767242404 +0100
+++ rpm-4.19.0/macros.in	2023-11-26 19:34:58.305400245 +0100
@@ -1101,11 +1101,11 @@ Supplements:   (%{name} = %{version}-%{r
 #   rpm can use regular expressions against target platforms in macro
 #   conditionals.
 #
-%ix86   i386 i486 i586 i686 pentium3 pentium4 athlon geode
+%ix86   i386 i486 i586 i686 pentium3 pentium4 athlon geode znver1_32
 
 #------------------------------------------------------------------------------
 # arch macro for all supported x86_64 processors
-%x86_64	x86_64 x86_64_v2 x86_64_v3 x86_64_v4 amd64 em64t
+%x86_64	x86_64 x86_64_v2 x86_64_v3 x86_64_v4 znver1 amd64 em64t
 
 #------------------------------------------------------------------------------
 # arch macro for all supported 32-bit ARM processors
diff -up rpm-4.19.0/rpmrc.in.16~ rpm-4.19.0/rpmrc.in
--- rpm-4.19.0/rpmrc.in.16~	2023-11-26 19:34:41.710241861 +0100
+++ rpm-4.19.0/rpmrc.in	2023-11-26 19:34:41.796242681 +0100
@@ -20,11 +20,13 @@ optflags: pentium3 -O2 -g -march=pentium
 optflags: pentium4 -O2 -g -march=pentium4
 optflags: athlon -O2 -g -march=athlon
 optflags: geode -Os -g -m32 -march=geode
+optflags: znver1_32 -O2 -g -march=znver1 -mtune=znver1 -mfpmath=sse
 optflags: ia64 -O2 -g
 optflags: x86_64 -O2 -g
 optflags: x86_64_v2 -O2 -g -march=x86-64-v2
 optflags: x86_64_v3 -O2 -g -march=x86-64-v3
 optflags: x86_64_v4 -O2 -g -march=x86-64-v4
+optflags: znver1 -O2 -g -march=znver1 -mtune=znver1
 optflags: amd64 -O2 -g
 optflags: ia32e -O2 -g
 
@@ -155,6 +157,7 @@ archcolor: x86_64 2
 archcolor: x86_64_v2 2
 archcolor: x86_64_v3 2
 archcolor: x86_64_v4 2
+archcolor: znver1 2
 
 archcolor: sh3 1
 archcolor: sh4 1
@@ -169,6 +172,7 @@ archcolor: loongarch64 2
 #############################################################
 # Canonical arch names and numbers
 
+arch_canon:	znver1_32:	znver1_32	1
 arch_canon:	athlon:	athlon	1
 arch_canon:	geode:	geode	1
 arch_canon:	pentium4:	pentium4	1
@@ -181,6 +185,7 @@ arch_canon:	x86_64:	x86_64	1
 arch_canon:	x86_64_v2:	x86_64_v2	1
 arch_canon:	x86_64_v3:	x86_64_v3	1
 arch_canon:	x86_64_v4:	x86_64_v4	1
+arch_canon:	znver1:	znver1	1
 arch_canon:	amd64:	amd64	1
 arch_canon:	ia32e:	ia32e	1
 arch_canon:	em64t:	em64t	1
@@ -314,6 +319,7 @@ buildarchtranslate: osfmach3_i586: i386
 buildarchtranslate: osfmach3_i486: i386
 buildarchtranslate: osfmach3_i386: i386
 
+buildarchtranslate: znver1_32: znver1_32
 buildarchtranslate: athlon: i386
 buildarchtranslate: geode: i386
 buildarchtranslate: pentium4: i386
@@ -397,6 +403,7 @@ buildarchtranslate: x86_64_v3: x86_64
 buildarchtranslate: x86_64_v4: x86_64
 buildarchtranslate: amd64: x86_64
 buildarchtranslate: ia32e: x86_64
+buildarchtranslate: znver1: znver1
 
 buildarchtranslate: sh3: sh3
 buildarchtranslate: sh4: sh4
@@ -419,6 +426,7 @@ arch_compat: alphaev56: alphaev5
 arch_compat: alphaev5: alpha
 arch_compat: alpha: axp noarch
 
+arch_compat: znver1_32: znver1_32 athlon geode pentium4 pentium3 i686 i586 i486 i386 noarch
 arch_compat: athlon: i686
 arch_compat: geode: i686
 arch_compat: pentium4: pentium3
@@ -513,6 +521,7 @@ arch_compat: ia32e: x86_64 em64t athlon
 arch_compat: x86_64_v2: x86_64 amd64 em64t athlon noarch
 arch_compat: x86_64_v3: x86_64_v2 x86_64 amd64 em64t athlon noarch
 arch_compat: x86_64_v4: x86_64_v3 x86_64_v2 x86_64 amd64 em64t athlon noarch
+arch_compat: znver1: x86_64_v3 x86_64_v2 x86_64 amd64 em64t athlon noarch
 
 arch_compat: sh3: noarch
 arch_compat: sh4: noarch
@@ -561,6 +570,7 @@ buildarch_compat: aarch64: noarch
 buildarch_compat: riscv: noarch
 buildarch_compat: riscv64: noarch
 
+buildarch_compat: znver1_32: znver1_32 athlon geode pentium4 pentium3 i686 i586 i486 i386 noarch
 buildarch_compat: athlon: i686
 buildarch_compat: geode: i586
 buildarch_compat: pentium4: pentium3
@@ -656,6 +666,7 @@ buildarch_compat: x86_64_v2: x86_64
 buildarch_compat: x86_64: noarch
 buildarch_compat: amd64: x86_64
 buildarch_compat: ia32e: x86_64
+buildarch_compat: znver1: znver1 x86_64
 
 buildarch_compat: sh3: noarch
 buildarch_compat: sh4: noarch
